Классы математических объектов на C++
=====================================

Описание проекта
----------------
Проект включает реализацию пяти классов:
1. Complex      — Комплексные числа.
2. Vector3D     — Векторы в трехмерном пространстве.
3. Matrix       — Вещественные матрицы.
4. Polynomial   — Многочлены одной переменной.
5. Triangle     — Треугольники на плоскости.

Каждый класс реализован в отдельной паре файлов `.h` и `.cpp` и подключается в главный файл `main.cpp`, который содержит меню для демонстрации всех функций.

Структура проекта
-----------------
project/
│
├── Complex.h / Complex.cpp         // Класс комплексных чисел
├── Vector3D.h / Vector3D.cpp       // Класс векторов в 3D
├── Matrix.h / Matrix.cpp           // Класс вещественных матриц
├── Polynomial.h / Polynomial.cpp   // Класс многочленов
├── Triangle.h / Triangle.cpp       // Класс треугольников
├── main.cpp                        // Главное меню и демонстрация
└── Info.txt			            // Описание проекта

Стандарты оформления
--------------------

1. Разделение кода:
   - Заголовочный файл `.h` содержит объявление класса.
   - Файл реализации `.cpp` — реализацию методов.

2. Используется `#pragma once` в заголовочных файлах.

3. Соглашения по стилю:
   - Имена классов: `PascalCase` (например, `Complex`).
   - Имена переменных: `camelCase` (`realPart`, `imag`).
   - Методы: `camelCase` (`getLength()`, `moveTo()`).
   - Приватные поля: с суффиксом `_` (`real_`, `imag_`).
   - Комментарии: однострочные `//` или многострочные `/* */`, расположены над методами.

4. Операции перегружены через `operator`, где применимо.